version: '3'
services:
  audiostems:
    container_name: audiostems
    build:
      dockerfile: Dockerfile.prod
    image: audiostems:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: audiostemsDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - uploads:/opt/app/public/uploads
    ports:
      - '8080:1337'
    networks:
      - audiostems
    depends_on:
      - audiostemsDB
      - audiowaveform-server
      
  audiostemsDB:
    container_name: audiostemsDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - audiostems-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5432:5432'
    networks:
      - audiostems
      
  audiostemsAdminer:
    container_name: audiostemsAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=audiostemsDB
    networks:
      - audiostems
    depends_on:
      - audiostemsDB
  audiowaveform-server:
    container_name: audiowaveform-server
    build:
      context: audiowaveform-server
    networks:
      - audiostems
    volumes:
      - uploads:/uploads

volumes:
  audiostems-data:
  uploads:

networks:
  audiostems:
    name: Audiostems
    driver: bridge
